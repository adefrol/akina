import React from "react";
import { useParams } from "react-router-dom";
import { Link } from "react-router-dom";
import "./css/main.css";
import scheme2_1 from "./media/scheme2_1.png"
import scheme2_2 from "./media/scheme2_2.png"
import scheme2_3 from "./media/scheme2_3.png"
import scheme2_4 from "./media/scheme2_4.png"
import scheme2_5 from "./media/scheme2_5.png"
import scheme2_6 from "./media/scheme2_6.png"
import scheme2_7 from "./media/scheme2_7.png"
import scheme2_8 from "./media/scheme2_8.png"
import scheme2_9 from "./media/scheme2_9.png"
import scheme2_10 from "./media/scheme2_10.png"

export default function SecondExes() {
    const { num } = useParams();

    const secondStageExes = [

        { id: num, formul: 'Пусть задано некоторое число my_number. Пользователь вводит с клавиатуры свое число user_number. Запрашивайте у пользователя вводить число user_number если оно равно my_number.', staging: 'Дано – число. Вывод – отсутствует.', formal: 'С помощью randint задаем случайное число my_number. Запускаем цикл «пока», пока вводимое число не будет равно my_number будет работать оператор pass, в ходе которого ничего не происходит, при введении правильного числа, происходит выход из программы.', replit: `https://replit.com/@adefrolx/ex2-${num}?lite=true`, scheme: scheme2_1 },
        { id: num, formul: 'Дан произвольный список, содержащий только числа. Выведите построчно все строки размером менее 10 символов.', staging: 'Дано – список чисел через пробел. Вывод – построчно все строки размером менее 10 символов.', formal: 'Ввод list, разбиение list по пробелам. Запускаем цикл i от 0 до длины list, в теле цикла ставим условие, если длина элемента i списка list меньше 10, то выводим этот элемент.', replit: `https://replit.com/@adefrolx/ex2-${num}?lite=true`, scheme: scheme2_2 },
        { id: num, formul: 'Сгенерируйте и выведите. Случайную строку размером 6 символов, содержащую только цифры. Строка должна содержать хотя бы одну цифру 3.', staging: 'Дано – отсутствует. Вывод – случайно сгенерированное число.', formal: 'Для начала импортируем randranage из библиотеки random. Задаем переменную string со значением «3» и переменную i со значением 0. Запускаем цикл, пока i < 5, в теле цикла мы придаем случайно сгенерированное число переменной number_element, далее добавляем в строку string данное число, и прибавляем к i единицу', replit: `https://replit.com/@adefrolx/ex2-${num}?lite=true`, scheme: scheme2_3 },
        { id: num, formul: 'Пусть дана строка. На основе данной строки сформируйте новую, содержащую только буквы Л. Выведите новую строку.', staging: 'Дано – строка. Вывод – строка на основе введенной состоящая из букв «л».', formal: 'Ввод строки string, создание переменной list. Запуск цикла перебора символов string, в теле цикла ставим условие, если i = «л» или «Л», то добавляем в list символ из перебора. Далее выводим list методом join (соединение элементов списка) без разделителя получившуюся строку', replit: `https://replit.com/@adefrolx/ex2-${num}?lite=true`, scheme: scheme2_4 },
        { id: num, formul: 'Пусть дана строка, состоящая из слов, пробелов и знаков препинания. На основании этой строки создайте новую (и выведите ее на консоль): Содержащую только слова размером от 5 до 10 символов.', staging: 'Дано – строка со знаками препинания. Вывод – строка только из слов размером от 5 до 10 символов.', formal: 'Ввод string, создаем переменную chars, с элементами которые понадобиться удалить из исходной строки, и создаем переменную resultList для вывода. Запускаем цикл i от 0 до длины chars с шагом 1, в теле цикла с помощью функции replace, заменяем в строке string знаки препинания на пустое значение. Далее мы выходим из цикла и разбиваем строку string по пробелам. Запускаем новый цикл i от 0 до длинны string с шагом 1, в теле цикла ставим условие, если длина элемента string с индексом i больше или равна 5, и одновременно меньше или равна 10, то добавляем данный элемент в resultList. Вывод resultList. ', replit: `https://replit.com/@adefrolx/ex2-${num}?lite=true`, scheme: scheme2_5 },
        { id: num, formul: 'Пусть дана строковая переменная, содержащая информацию о студентах: my_string = «Ф;И;О;Возраст;Категория;_Иванов;Иван;Иванович;18 лет;Студент 2 курса;_Петров;Семен;Игоревич;17 лет;Студент 2 курса». ', staging: 'Дано – строка с данными о студентах. Вывод – исходная строка в табличной форме.', formal: 'Добавляем переменную my_string с исходными данными. Далее создаем переменную list, и сразу же пересобираем её через функцию join которая разделяет пробелом строку my_string разбитую по символу “;”, здесь же мы разбиваем строку ещё на символ “_”. Запускаем цикл перебора списка list в теле цикла указываем вывод каждого элемента списка', replit: `https://replit.com/@adefrolx/ex2-${num}?lite=true`, scheme: scheme2_6 },
        { id: num, formul: 'Пусть дана строковая переменная, содержащая информацию о студентах вида: my_string = «ФИО;Возраст;Категория;_Иванов Иван Иванович;23 года;Студент 3 курса;_Петров Семен Игоревич;22 года;Студент 2 курса;_Иванов Семен Игоревич;22 года;Студент 2 курса;_Акибов Ярослав Наумович;23 года;Студент 3 курса;_Борков Станислав Максимович;21 год;Студент 1 курса;_Петров Семен Семенович;21 год;Студент 1 курса;_Романов Станислав Андреевич;23 года;Студент 3 курса;_Петров Всеволод Борисович;21 год;Студент 2 курса». Выведите построчно информацию о студентах, чей возраст больше «21 года».', staging: 'Дано – строка с данными о студентах. Вывод – построчная информация о студентах, чей возраст больше 21 года. ', formal: 'Добавляем переменную my_string с исходными данными. Далее создаем переменную list, добавляем в неё разбитую строку my_string по символу “:_”. Запускаем цикл перебора list начиная с индекса 1, в теле цикла создаем переменные fio,age,info которые содержат в себе разбитый элемент list с индексом i по символу “;”, также создаем переменную a, b которые содержат разбитую переменную age по символу “пробел”, и далее ставим условие, если целочисленная переменная a больше 21, то выводим fio, age, info (информацию о студенте чей возраст больше 21 года)', replit: `https://replit.com/@adefrolx/ex2-${num}?lite=true`, scheme: scheme2_7 },
        { id: num, formul: 'Пусть дана строка произвольной длины. Выведите информацию о том, сколько в ней символов и сколько слов.', staging: 'Дано – строка. Вывод – информация о том сколько в ней символов и слов.', formal: 'Ввод string, создаем переменную countSymbol которая содержит в себе длинну string, создаем переменную countWord, которая считает количество пробелов в string и прибавляем единицу, это и будет подсчёт слов. Далее выводим countSymbol и countWord', replit: `https://replit.com/@adefrolx/ex2-${num}?lite=true`, scheme: scheme2_8 },
        { id: num, formul: 'Пусть дана матрица чисел размером NхN. Представьте данную матрицу в виде списка. Выведите результат сложения всех элементов матрицы.', staging: 'Дано – кол-во строк и столбцов. Вывод – список из матрицы и сумма всех элементов матрицы.', formal: 'Дано – кол-во строк и столбцов. Вывод – список из матрицы и сумма всех элементов матрицы. Импортируем randint из библиотеки random. Ввод string и column, создаем пустые списки arr и list. Запускаем цикл i от 0 до значения string с шагом 1, в теле цикла добавляем в arr ещё пустые списки, тут же запускаем ещё один цикл j от 0 до значения column с шагом 1, в нём добавляем в элемент списка arr с индексом i случайное число. Выходим из цикла, и создаем другой цикл i перебора элементов arr, в теле которого мы добавляем в список list элемент i. Выводим list и суммированную матрицу', replit: `https://replit.com/@adefrolx/ex2-${num}?lite=true`, scheme: scheme2_9 },
        { id: num, formul: 'Пусть дан список из 10 элементов. Удалите все четные элементы и добавьте 2 новых. Выведите список на экран.', staging: 'Дано – список из 10 элементов. Вывод – список без нечетных элементов, и два новых.', formal: 'Ввод list с 10-ью элементами, создание переменной resultList для вывода результата. Запускаем цикл i от 0 до длинны list, с шагом 2, в теле цикла указываем заполнение resultList элементами list с индексом i. Добавляем в resultList два новых элемента new1, new2. Вывод resultList', replit: `https://replit.com/@adefrolx/ex2-${num}?lite=true`, scheme: scheme2_10 },


    ]


    return (
        <div className="container">
            <div className="ex">
                <h1>Задание {secondStageExes[num - 1].id}</h1>
                <div className="block">
                    <h2>Формулировка</h2>
                    <p>{secondStageExes[num - 1].formul}</p>
                </div>
                <div className="block">
                    <div className="ex__item">
                        <h2>Постановка</h2>
                        <p>
                            {secondStageExes[num - 1].staging}
                        </p>
                    </div>
                    <div className="ex__item">
                        <h2>Формализация</h2>
                        <p>{secondStageExes[num - 1].formal}</p>
                    </div>
                </div>
                <div className="block">
                    <h2>Код / Терминал</h2>
                    <iframe frameBorder="0" width="100%" height="700px" src={secondStageExes[num - 1].replit} title={"Задание " + num}></iframe>
                </div>
                <div className="block">
                    <h2>Блок-схема</h2>
                    <img src={secondStageExes[num - 1].scheme} alt={"Схема " + num} />
                </div>
                <div className="block">
                    <Link to='/download' className="btn__main">Скачивание задач</Link>
                </div>
            </div>
        </div>
    );


}